
import java.awt.List;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.file.Files;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import jdk.nashorn.internal.objects.NativeError;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Youssef
 */
public class Menu extends javax.swing.JFrame {

    
    /**
     * Creates new form Menu
     */
    public Menu() {
        initComponents();
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        jColorChooser1 = new javax.swing.JColorChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(700, 250));
        setResizable(false);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jLabel1.setText("You Can Enter Your Code Here Or Open A File In The Main Menu");

        jButton1.setBackground(new java.awt.Color(51, 255, 204));
        jButton1.setForeground(new java.awt.Color(0, 153, 153));
        jButton1.setText("Break Code");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(255, 51, 255));
        jButton2.setForeground(new java.awt.Color(153, 0, 153));
        jButton2.setText("Check Errors");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(255, 51, 51));
        jButton3.setForeground(new java.awt.Color(153, 0, 0));
        jButton3.setText("Exit");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(0, 0, 255));
        jButton4.setForeground(new java.awt.Color(0, 0, 102));
        jButton4.setText("Values");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jMenu1.setText("File");

        jMenuItem1.setText("Open File");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem3.setText("Close Project");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuItem4.setText("Exit");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("View");

        jMenuItem5.setText("Break Code");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem5);

        jMenuItem6.setText("Check For Errors");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem6);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Design");

        jMenuItem2.setText("Background Color");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem2);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(45, 45, 45))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(34, 34, 34)))
                        .addComponent(jButton2)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 70, Short.MAX_VALUE)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
         int returnVal = jFileChooser1.showOpenDialog(this);
        if (returnVal == jFileChooser1.APPROVE_OPTION) {
        File file = jFileChooser1.getSelectedFile();
             try {
                 jTextArea1.read( new FileReader( file.getAbsolutePath() ), null );
             } catch (FileNotFoundException ex) {
                 Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
             } catch (IOException ex) {
                 Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
             }
        }
        else {
        System.out.println("File access cancelled by user.");
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        // TODO add your handling code here:
        FileWriter fileWriter=null;
        try {
            fileWriter = new FileWriter("Temp.txt", true);
        } catch (IOException ex) {
            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
        }
        BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
        try {
            bufferedWriter.write(jTextArea1.getText());
        } catch (IOException ex) {
            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            bufferedWriter.close();
        } catch (IOException ex) {
            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
        }
        FileReader fr = null;
         File f = null;
         f =   new File("Temp.txt");      
        try {  
            fr = new FileReader(f);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
        }
        BufferedReader br = new BufferedReader(fr);
        String Code="";
        String Def="";
        String Def2="";
        int k=0;
        int flag=0;
        int[] flag_var={0,0,0,0,0};
        int line_count=0;
        int count_letters=0;
        String errors="";
        try {
            while ((Code=br.readLine())!=null)
            {
                String Lines[]=Code.split(System.getProperty("line.separator"));
                for (int j=0;j<Lines.length;j++)
                {
                    line_count++;
                    String st=Lines[j].toString();
                    for (k=0;k<st.length();k++)
                    {
                        if(st.charAt(k)=='+'||st.charAt(k)=='-'||st.charAt(k)=='*'||st.charAt(k)=='/')
                        {
                            Def+="Operators ";
                            flag=0;
                        }
                        else if(st.charAt(k)=='(')
                        {
                            Def+="( : Open Brackets ";
                            flag=0;
                        }
                        else if(st.charAt(k)==')')
                        {
                            Def+=") : Closed Brackets ";
                            flag=0;
                        }
                        else if(st.charAt(k)=='{')
                        {
                            Def+="{ : Open Curly Brackets ";
                            flag=0;
                        }
                        else if(st.charAt(k)=='}')
                        {
                            Def+="} : Closed Curly Brackets ";
                            flag=0;
                        }
                        else if(st.charAt(k)==',')
                        {
                            Def+=", : Comma ";
                            flag=0;
                        }
                        else if(st.charAt(k)==';')
                        {
                            Def+="; : Semicolon ";
                            flag=0;
                        }
                        else if(st.charAt(k)=='&'&&Code.charAt(k+1)=='&')
                        {
                            Def+="&& : And ";
                            flag=0;
                            k+=2;
                        }
                        else if(st.charAt(k)=='|'&&Code.charAt(k+1)=='|')
                        {
                            Def+="|| : OR ";
                            flag=0;
                            k+=2;
                        }
                        else if(st.charAt(k)=='<')
                        {
                            Def+="< : Less Than ";
                            flag=0;
                        }
                        else if(st.charAt(k)=='>')
                        {
                            Def+="> : Greater Than ";
                            flag=0;
                        }
                        else if(st.charAt(k)=='=')
                        {
                            Def+="= : Equal ";
                            flag=0;
                        }
                        else if(st.charAt(k)=='!')
                        {
                            Def+="! : Not ";
                            flag=0;
                        }
                        else if (st.charAt(k)=='i'&&st.charAt(k+1)=='n'&&st.charAt(k+2)=='t'&&st.charAt(k+3)==' ')
                        {
                            Def+="int : Identifier (Integer) ";
                            flag_var[0]=1;
                            flag=0;
                            k+=2;
                        }
                        else if (st.charAt(k)=='c'&&st.charAt(k+1)=='h'&&st.charAt(k+2)=='a'&&st.charAt(k+3)=='r'&&st.charAt(k+4)==' ')
                        {
                            Def+="char : Identifier (Character) ";
                            flag_var[1]=1;
                            flag=0;
                            k+=3;
                        }
                        else if (st.charAt(k)=='f'&&st.charAt(k+1)=='l'&&st.charAt(k+2)=='o'&&st.charAt(k+3)=='a'&&st.charAt(k+4)=='t')
                        {
                            Def+="float : Identifier (Float) ";
                            flag_var[2]=1;
                            flag=0;
                            k+=4;
                        }
                        else if (st.charAt(k)=='s'&&st.charAt(k+1)=='t'&&st.charAt(k+2)=='r'&&st.charAt(k+3)=='i'&&st.charAt(k+4)=='n'&&st.charAt(k+5)=='g')
                        {
                            Def+="string : Identifier (String) ";
                            flag_var[3]=1;
                            flag=0;
                            k+=5;
                        }
                        else if (st.charAt(k)=='d'&&st.charAt(k+1)=='o'&&st.charAt(k+2)=='u'&&st.charAt(k+3)=='b'&&st.charAt(k+4)=='l'&&st.charAt(k+5)=='e')
                        {
                            Def+="duble : Identifier (Double) ";
                            flag_var[4]=1;
                            flag=0;
                            k+=5;
                        }
                        else if (st.charAt(k)=='b'&&st.charAt(k+1)=='o'&&st.charAt(k+2)=='o'&&st.charAt(k+3)=='l')
                        {
                            Def+="bool : Identifier (Bool) ";
                            flag=0;
                            k+=3;
                        }
                        else if (st.charAt(k)=='f'&&st.charAt(k+1)=='o'&&st.charAt(k+2)=='r')
                        {
                            Def+="for : Reserved Word ";
                            k+=2;
                        }
                        else if (st.charAt(k)=='i'&&st.charAt(k+1)=='f')
                        {
                            Def+="if : Reserved Word ";
                            k+=1;
                        }
                        else if (st.charAt(k)=='d'&&st.charAt(k+1)=='o')
                        {
                            Def+="do : Reserved Word ";
                            k+=1;
                        }
                        else if (st.charAt(k)=='e'&&st.charAt(k+1)=='n'&&st.charAt(k+2)=='d')
                        {
                            Def+="end : Reserved Word ";
                            k+=2;
                        }
                        else if (st.charAt(k)=='w'&&st.charAt(k+1)=='h'&&st.charAt(k+2)=='i'&&st.charAt(k+3)=='l'&&st.charAt(k+4)=='e')
                        {
                            Def+="while : Reserved Word ";
                            k+=4;
                        }
                        else if (st.charAt(k)=='r'&&st.charAt(k+1)=='e'&&st.charAt(k+2)=='t'&&st.charAt(k+3)=='u'&&st.charAt(k+4)=='r'&&st.charAt(k+5)=='n')
                        {
                            Def+="return : Reserved Word ";
                            k+=5;
                        }
                        else if (st.charAt(k)=='b'&&st.charAt(k+1)=='r'&&st.charAt(k+2)=='e'&&st.charAt(k+3)=='a'&&st.charAt(k+4)=='k')
                        {
                            Def+="break : Reserved Word ";
                            k+=4;
                        }
                        else if (st.charAt(k)=='c'&&st.charAt(k+1)=='o'&&st.charAt(k+2)=='n'&&st.charAt(k+3)=='t'&&st.charAt(k+4)=='i'&&st.charAt(k+5)=='n'&&st.charAt(k+6)=='u'&&st.charAt(k+7)=='e')
                        {
                            Def+="continue : Reserved Word ";
                            k+=7;
                        }
                        else if (Character.isDigit(st.charAt(k))&&(!Character.isLetter(st.charAt(k-1))))
                        {
                            Def+="Number (Value) ";
                            if (flag_var[0]!=1)
                            {
                                errors+="Error in line "+ line_count +" Not Type"+System.getProperty("line.separator");
                            }
                            else
                            {
                                flag_var[0]=0;
                            }
                            flag=0;
                        }
                        else if (st.charAt(k)!=' ')
                        {
                            if (flag==0)
                            {
                                Def+="Variable ";
                                
                                flag=1;
                            }
                        }
                        
                        if(st.charAt(k)=='/'&&st.charAt(k+1)=='0')
                        {
                            errors+="Error in line "+ line_count +" Division by Zero"+System.getProperty("line.separator");

                        }
                        
                        count_letters++;
                    }
                    if(Lines[j].toString().charAt(k-1)!=';'&&(Lines[j].toString().charAt(0)=='f'&&Lines[j].toString().charAt(1)=='o'&&Lines[j].toString().charAt(2)=='r'&&(Lines[j].toString().charAt(3)==' '||Lines[j].toString().charAt(3)=='(')))
                    {   
                    }
                    else if(Lines[j].toString().charAt(k-1)!=';'&&(Lines[j].toString().charAt(0)=='i'&&Lines[j].toString().charAt(1)=='f'&&(Lines[j].toString().charAt(2)==' '||Lines[j].toString().charAt(2)=='(')))
                    {   
                    }
                    else if(Lines[j].toString().charAt(k-1)!=';'&&(Lines[j].toString().charAt(0)=='w'&&Lines[j].toString().charAt(1)=='h'&&Lines[j].toString().charAt(2)=='i'&&Lines[j].toString().charAt(3)=='l'&&Lines[j].toString().charAt(4)=='e'&&(Lines[j].toString().charAt(5)==' '||Lines[j].toString().charAt(5)=='(')))
                    {   
                    }
                    else if(Lines[j].toString().charAt(k-1)!=';')
                    {
                        errors+="Error in line "+ line_count +" Missing simicolon"+System.getProperty("line.separator");
                    }
                    Def+=System.getProperty("line.separator");
                    count_letters=0;
                }
            }
        } catch (IOException ex) {
            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
        }
        CodeBreak cb = new CodeBreak();
        cb.jTextArea1.setText(Def);
        cb.setVisible(true);
        FileWriter fileWriter2=null;
        try {
            fileWriter2 = new FileWriter("output.txt", true);
        } catch (IOException ex) {
            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
        }
        BufferedWriter bufferedWriter2 = new BufferedWriter(fileWriter2);
        try {
            bufferedWriter2.write(Def);
        } catch (IOException ex) {
            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            bufferedWriter2.close();
        } catch (IOException ex) {
            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            br.close();
        } catch (IOException ex) {
            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
        }
        f.delete();
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        new BackgroundColor().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        jTextArea1.setText("");
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        // TODO add your handling code here:
        FileWriter fileWriter=null;
        try {
            fileWriter = new FileWriter("Temp.txt", true);
        } catch (IOException ex) {
            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
        }
        BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
        try {
            bufferedWriter.write(jTextArea1.getText());
        } catch (IOException ex) {
            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            bufferedWriter.close();
        } catch (IOException ex) {
            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
        }
        FileReader fr = null;
         File f = null;
         f =   new File("Temp.txt");      
        try {  
            fr = new FileReader(f);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
        }
        BufferedReader br = new BufferedReader(fr);
        String Code="";
        String Def="";
        String Def2="";
        int k=0;
        int flag=0;
        int[] flag_var={0,0,0,0,0};
        int line_count=0;
        int count_letters=0;
        String errors="";
        try {
            while ((Code=br.readLine())!=null)
            {
                String Lines[]=Code.split(System.getProperty("line.separator"));
                for (int j=0;j<Lines.length;j++)
                {
                    line_count++;
                    String st=Lines[j].toString();
                    for (k=0;k<st.length();k++)
                    {
                        if(st.charAt(k)=='+'||st.charAt(k)=='-'||st.charAt(k)=='*'||st.charAt(k)=='/')
                        {
                            Def+="Operators ";
                            flag=0;
                        }
                        else if(st.charAt(k)=='(')
                        {
                            Def+="( : Open Brackets ";
                            flag=0;
                        }
                        else if(st.charAt(k)==')')
                        {
                            Def+=") : Closed Brackets ";
                            flag=0;
                        }
                        else if(st.charAt(k)=='{')
                        {
                            Def+="{ : Open Curly Brackets ";
                            flag=0;
                        }
                        else if(st.charAt(k)=='}')
                        {
                            Def+="} : Closed Curly Brackets ";
                            flag=0;
                        }
                        else if(st.charAt(k)==',')
                        {
                            Def+=", : Comma ";
                            flag=0;
                        }
                        else if(st.charAt(k)==';')
                        {
                            Def+="; : Semicolon ";
                            flag=0;
                        }
                        else if(st.charAt(k)=='&'&&Code.charAt(k+1)=='&')
                        {
                            Def+="&& : And ";
                            flag=0;
                            k+=2;
                        }
                        else if(st.charAt(k)=='|'&&Code.charAt(k+1)=='|')
                        {
                            Def+="|| : OR ";
                            flag=0;
                            k+=2;
                        }
                        else if(st.charAt(k)=='<')
                        {
                            Def+="< : Less Than ";
                            flag=0;
                        }
                        else if(st.charAt(k)=='>')
                        {
                            Def+="> : Greater Than ";
                            flag=0;
                        }
                        else if(st.charAt(k)=='=')
                        {
                            Def+="= : Equal ";
                            flag=0;
                        }
                        else if(st.charAt(k)=='!')
                        {
                            Def+="! : Not ";
                            flag=0;
                        }
                        else if (st.charAt(k)=='i'&&st.charAt(k+1)=='n'&&st.charAt(k+2)=='t'&&st.charAt(k+3)==' ')
                        {
                            Def+="int : Identifier (Integer) ";
                            flag_var[0]=1;
                            flag=0;
                            k+=2;
                        }
                        else if (st.charAt(k)=='c'&&st.charAt(k+1)=='h'&&st.charAt(k+2)=='a'&&st.charAt(k+3)=='r'&&st.charAt(k+4)==' ')
                        {
                            Def+="char : Identifier (Character) ";
                            flag_var[1]=1;
                            flag=0;
                            k+=3;
                        }
                        else if (st.charAt(k)=='f'&&st.charAt(k+1)=='l'&&st.charAt(k+2)=='o'&&st.charAt(k+3)=='a'&&st.charAt(k+4)=='t')
                        {
                            Def+="float : Identifier (Float) ";
                            flag_var[2]=1;
                            flag=0;
                            k+=4;
                        }
                        else if (st.charAt(k)=='s'&&st.charAt(k+1)=='t'&&st.charAt(k+2)=='r'&&st.charAt(k+3)=='i'&&st.charAt(k+4)=='n'&&st.charAt(k+5)=='g')
                        {
                            Def+="string : Identifier (String) ";
                            flag_var[3]=1;
                            flag=0;
                            k+=5;
                        }
                        else if (st.charAt(k)=='d'&&st.charAt(k+1)=='o'&&st.charAt(k+2)=='u'&&st.charAt(k+3)=='b'&&st.charAt(k+4)=='l'&&st.charAt(k+5)=='e')
                        {
                            Def+="duble : Identifier (Double) ";
                            flag_var[4]=1;
                            flag=0;
                            k+=5;
                        }
                        else if (st.charAt(k)=='b'&&st.charAt(k+1)=='o'&&st.charAt(k+2)=='o'&&st.charAt(k+3)=='l')
                        {
                            Def+="bool : Identifier (Bool) ";
                            flag=0;
                            k+=3;
                        }
                        else if (st.charAt(k)=='f'&&st.charAt(k+1)=='o'&&st.charAt(k+2)=='r')
                        {
                            Def+="for : Reserved Word ";
                            k+=2;
                        }
                        else if (st.charAt(k)=='i'&&st.charAt(k+1)=='f')
                        {
                            Def+="if : Reserved Word ";
                            k+=1;
                        }
                        else if (st.charAt(k)=='d'&&st.charAt(k+1)=='o')
                        {
                            Def+="do : Reserved Word ";
                            k+=1;
                        }
                        else if (st.charAt(k)=='e'&&st.charAt(k+1)=='n'&&st.charAt(k+2)=='d')
                        {
                            Def+="end : Reserved Word ";
                            k+=2;
                        }
                        else if (st.charAt(k)=='w'&&st.charAt(k+1)=='h'&&st.charAt(k+2)=='i'&&st.charAt(k+3)=='l'&&st.charAt(k+4)=='e')
                        {
                            Def+="while : Reserved Word ";
                            k+=4;
                        }
                        else if (st.charAt(k)=='r'&&st.charAt(k+1)=='e'&&st.charAt(k+2)=='t'&&st.charAt(k+3)=='u'&&st.charAt(k+4)=='r'&&st.charAt(k+5)=='n')
                        {
                            Def+="return : Reserved Word ";
                            k+=5;
                        }
                        else if (st.charAt(k)=='b'&&st.charAt(k+1)=='r'&&st.charAt(k+2)=='e'&&st.charAt(k+3)=='a'&&st.charAt(k+4)=='k')
                        {
                            Def+="break : Reserved Word ";
                            k+=4;
                        }
                        else if (st.charAt(k)=='c'&&st.charAt(k+1)=='o'&&st.charAt(k+2)=='n'&&st.charAt(k+3)=='t'&&st.charAt(k+4)=='i'&&st.charAt(k+5)=='n'&&st.charAt(k+6)=='u'&&st.charAt(k+7)=='e')
                        {
                            Def+="continue : Reserved Word ";
                            k+=7;
                        }
                        else if (Character.isDigit(st.charAt(k))&&(!Character.isLetter(st.charAt(k-1))))
                        {
                            Def+="Number (Value) ";
                            if (flag_var[0]!=1)
                            {
                                errors+="Error in line "+ line_count +" Not Type"+System.getProperty("line.separator");
                            }
                            else
                            {
                                flag_var[0]=0;
                            }
                            flag=0;
                        }
                        else if (st.charAt(k)!=' ')
                        {
                            if (flag==0)
                            {
                                Def+="Variable ";
                                
                                flag=1;
                            }
                        }
                        
                        if(st.charAt(k)=='/'&&st.charAt(k+1)=='0')
                        {
                            errors+="Error in line "+ line_count +" Division by Zero"+System.getProperty("line.separator");

                        }
                        
                        count_letters++;
                    }
                    if(Lines[j].toString().charAt(k-1)!=';'&&(Lines[j].toString().charAt(0)=='f'&&Lines[j].toString().charAt(1)=='o'&&Lines[j].toString().charAt(2)=='r'&&(Lines[j].toString().charAt(3)==' '||Lines[j].toString().charAt(3)=='(')))
                    {   
                    }
                    else if(Lines[j].toString().charAt(k-1)!=';'&&(Lines[j].toString().charAt(0)=='i'&&Lines[j].toString().charAt(1)=='f'&&(Lines[j].toString().charAt(2)==' '||Lines[j].toString().charAt(2)=='(')))
                    {   
                    }
                    else if(Lines[j].toString().charAt(k-1)!=';'&&(Lines[j].toString().charAt(0)=='w'&&Lines[j].toString().charAt(1)=='h'&&Lines[j].toString().charAt(2)=='i'&&Lines[j].toString().charAt(3)=='l'&&Lines[j].toString().charAt(4)=='e'&&(Lines[j].toString().charAt(5)==' '||Lines[j].toString().charAt(5)=='(')))
                    {   
                    }
                    else if(Lines[j].toString().charAt(k-1)!=';')
                    {
                        errors+="Error in line "+ line_count +" Missing simicolon"+System.getProperty("line.separator");
                    }
                    Def+=System.getProperty("line.separator");
                    count_letters=0;
                }
            }
        } catch (IOException ex) {
            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
        }
        ErrorChecing er = new ErrorChecing();
        er.jTextArea1.setText(errors);
        er.setVisible(true);
        FileWriter fileWriter2=null;
        try {
            fileWriter2 = new FileWriter("output.txt", true);
        } catch (IOException ex) {
            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
        }
        BufferedWriter bufferedWriter2 = new BufferedWriter(fileWriter2);
        try {
            bufferedWriter2.write(Def);
        } catch (IOException ex) {
            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            bufferedWriter2.close();
        } catch (IOException ex) {
            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            br.close();
        } catch (IOException ex) {
            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
        }
        f.delete();
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here
        ArrayList<Variables> var=new ArrayList<Variables>();
        int flaghabal=0;
        String temp="";
        FileWriter fileWriter=null;
        try {
            fileWriter = new FileWriter("Temp.txt", true);
        } catch (IOException ex) {
            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
        }
        BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
        try {
            bufferedWriter.write(jTextArea1.getText());
        } catch (IOException ex) {
            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            bufferedWriter.close();
        } catch (IOException ex) {
            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
        }
        FileReader fr = null;
         File f = null;
         f =   new File("Temp.txt");      
        try {  
            fr = new FileReader(f);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
        }
        BufferedReader br = new BufferedReader(fr);
        String Code="";
        String Def="";
        String Def2="";
        int k=0;
        int flag=0;
        int[] flag_var={0,0,0,0,0};
        int line_count=0;
        int count_letters=0;
        String errors="";
        String acess="";
        int flagp=0;
        int []flagfun={0,0,0,0,0,0};
        int flagno=0;
        String tempk="";
        try {
            while ((Code=br.readLine())!=null)
            {
                String Lines[]=Code.split(System.getProperty("line.separator"));
                for (int j=0;j<Lines.length;j++)
                {
                    line_count++;
                    String st=Lines[j].toString();
                    for (k=0;k<st.length();k++)
                    {
                        if(st.charAt(k)=='+'||st.charAt(k)=='-'||st.charAt(k)=='*'||st.charAt(k)=='/')
                        {
                            Def+="Operators ";
                            flag=0;
                        }
                        else if(st.charAt(k)=='(')
                        {
                            Def+="( : Open Brackets ";
                            flag=0;
                        }
                        else if(st.charAt(k)==')')
                        {
                            Def+=") : Closed Brackets ";
                            flag=0;
                        }
                        else if(st.charAt(k)=='{')
                        {
                            Def+="{ : Open Curly Brackets ";
                            flag=0;
                        }
                        else if(st.charAt(k)=='}')
                        {
                            Def+="} : Closed Curly Brackets ";
                            flag=0;
                        }
                        else if(st.charAt(k)==',')
                        {
                            Def+=", : Comma ";
                            flag=0;
                        }
                        else if(st.charAt(k)==';')
                        {
                            Def+="; : Semicolon ";
                            flag=0;
                        }
                        else if(st.charAt(k)=='&'&&Code.charAt(k+1)=='&')
                        {
                            Def+="&& : And ";
                            flag=0;
                            k+=2;
                        }
                        else if(st.charAt(k)=='|'&&Code.charAt(k+1)=='|')
                        {
                            Def+="|| : OR ";
                            flag=0;
                            k+=2;
                        }
                        else if(st.charAt(k)=='<')
                        {
                            Def+="< : Less Than ";
                            flag=0;
                        }
                        else if(st.charAt(k)=='>')
                        {
                            Def+="> : Greater Than ";
                            flag=0;
                        }
                        else if(st.charAt(k)=='=')
                        {
                            Def+="= : Equal ";
                            flag=0;
                        }
                        else if(st.charAt(k)=='!')
                        {
                            Def+="! : Not ";
                            flag=0;
                        }
                        else if (st.charAt(k)=='i'&&st.charAt(k+1)=='n'&&st.charAt(k+2)=='t'&&st.charAt(k+3)==' ')
                        {
                            Def+="int : Identifier (Integer) ";
                            flag_var[0]=1;
                            flag=0;
                            k+=2;
                        }
                        else if (st.charAt(k)=='c'&&st.charAt(k+1)=='h'&&st.charAt(k+2)=='a'&&st.charAt(k+3)=='r'&&st.charAt(k+4)==' ')
                        {
                            Def+="char : Identifier (Character) ";
                            flag_var[1]=1;
                            flag=0;
                            k+=3;
                        }
                        else if (st.charAt(k)=='f'&&st.charAt(k+1)=='l'&&st.charAt(k+2)=='o'&&st.charAt(k+3)=='a'&&st.charAt(k+4)=='t')
                        {
                            Def+="float : Identifier (Float) ";
                            flag_var[2]=1;
                            flag=0;
                            k+=4;
                        }
                        else if (st.charAt(k)=='s'&&st.charAt(k+1)=='t'&&st.charAt(k+2)=='r'&&st.charAt(k+3)=='i'&&st.charAt(k+4)=='n'&&st.charAt(k+5)=='g')
                        {
                            Def+="string : Identifier (String) ";
                            flag_var[3]=1;
                            flag=0;
                            k+=5;
                        }
                        else if (st.charAt(k)=='d'&&st.charAt(k+1)=='o'&&st.charAt(k+2)=='u'&&st.charAt(k+3)=='b'&&st.charAt(k+4)=='l'&&st.charAt(k+5)=='e')
                        {
                            Def+="duble : Identifier (Double) ";
                            flag_var[4]=1;
                            flag=0;
                            k+=5;
                        }
                        else if (st.charAt(k)=='b'&&st.charAt(k+1)=='o'&&st.charAt(k+2)=='o'&&st.charAt(k+3)=='l')
                        {
                            Def+="bool : Identifier (Bool) ";
                            flag=0;
                            k+=3;
                        }
                        else if (st.charAt(k)=='f'&&st.charAt(k+1)=='o'&&st.charAt(k+2)=='r')
                        {
                            Def+="for : Reserved Word ";
                            
                            k+=2;
                            int F=k+2;
                            if (((st.charAt(F)!='('
                                             &&(st.charAt(F)==' '&&st.charAt(F+1)!='(')
                                            )))
                            {
                                    errors+="Error In Line "+ line_count + " Missing Open Bracket"+System.getProperty("line.separator");
                                    break;
                            }
                            else 
                            {
                                if (st.charAt(F+1)=='(')
                                {
                                    F++;
                                }
                                F++;
                                Checking check = new Checking();
                                errors+=check.variabless2(st, errors, line_count,F);
                            }
                        }
                        else if (st.charAt(k)=='i'&&st.charAt(k+1)=='f')
                        {
                            Def+="if : Reserved Word ";
                            int flagct=0;
                            k+=1;
                            int l=k+1;
                            if (((st.charAt(l)!='('
                                             &&(st.charAt(l)==' '&&st.charAt(l+1)!='(')
                                            )))
                            {
                                    errors+="Error In Line "+ line_count + " Missing Open Bracket"+System.getProperty("line.separator");
                                    break;
                            }
                            else 
                            {
                                if (st.charAt(l+1)=='(')
                                {
                                    l++;
                                }
                                l++;
                                Checking check = new Checking();
                                errors+=check.variabless(st, errors, line_count,l);
                            }
                            
                            
                        }
                        else if (st.charAt(k)=='d'&&st.charAt(k+1)=='o')
                        {
                            Def+="do : Reserved Word ";
                            k+=1;
                        }
                        else if (st.charAt(k)=='e'&&st.charAt(k+1)=='n'&&st.charAt(k+2)=='d')
                        {
                            Def+="end : Reserved Word ";
                            k+=2;
                        }
                        else if (st.charAt(k)=='w'&&st.charAt(k+1)=='h'&&st.charAt(k+2)=='i'&&st.charAt(k+3)=='l'&&st.charAt(k+4)=='e')
                        {
                            Def+="while : Reserved Word ";
                            k+=4;
                        }
                        else if (st.charAt(k)=='r'&&st.charAt(k+1)=='e'&&st.charAt(k+2)=='t'&&st.charAt(k+3)=='u'&&st.charAt(k+4)=='r'&&st.charAt(k+5)=='n')
                        {
                            Def+="return : Reserved Word ";
                            k+=5;
                        }
                        else if (st.charAt(k)=='b'&&st.charAt(k+1)=='r'&&st.charAt(k+2)=='e'&&st.charAt(k+3)=='a'&&st.charAt(k+4)=='k')
                        {
                            Def+="break : Reserved Word ";
                            k+=4;
                        }
                        else if (st.charAt(k)=='c'&&st.charAt(k+1)=='o'&&st.charAt(k+2)=='n'&&st.charAt(k+3)=='t'&&st.charAt(k+4)=='i'&&st.charAt(k+5)=='n'&&st.charAt(k+6)=='u'&&st.charAt(k+7)=='e')
                        {
                            Def+="continue : Reserved Word ";
                            k+=7;
                        }
                        else if (st.charAt(k)=='p'&&st.charAt(k+1)=='u'&&st.charAt(k+2)=='b'&&st.charAt(k+3)=='l'&&st.charAt(k+4)=='i'&&st.charAt(k+5)=='c')
                        {
                            Def+="Public";
                            flagp=1;
                            k+=5;
                            flag=0;
                        }
                        else if (st.charAt(k)=='p'&&st.charAt(k+1)=='r'&&st.charAt(k+2)=='i'&&st.charAt(k+3)=='v'&&st.charAt(k+4)=='a'&&st.charAt(k+5)=='t'&&st.charAt(k+6)=='e')
                        {
                            Def+="private";
                            flagp=2;
                            k+=6;
                            flag=0;
                        }
                        else if (st.charAt(k)=='c'&&st.charAt(k+1)=='l'&&st.charAt(k+2)=='a'&&st.charAt(k+3)=='s'&&st.charAt(k+4)=='s')
                        {
                            flagfun[flagno]=1;
                            flagno++;
                            k+=5;
                            flag=0;
                        }
                        else if (st.charAt(k)=='f'&&st.charAt(k+1)=='u'&&st.charAt(k+2)=='n'&&st.charAt(k+3)=='c'&&st.charAt(k+4)=='t'&&st.charAt(k+5)=='i'&&st.charAt(k+6)=='o'&&st.charAt(k+7)=='n')
                        {
                            flagfun[flagno]=1;
                            flagno++;
                            k+=7;
                            flag=0;
                        }
                        else if (st.charAt(k)=='L')
                        {
                            
                            flagfun[flagno]=0;
                            if(flagno>0)
                            {
                                flagno--;
                            }
                            for (int oop=0;oop<var.size();oop++)
                            {
                                if (var.get(oop).access.equals("Private"))
                                {
                                    if (var.get(oop).Context>flagno)
                                    {
                                        var.get(oop).Accessible=0;
                                    }
                                }
                            }
                            flag=0;
                            
                        }
                        else if (Character.isDigit(st.charAt(k))&&(!Character.isLetter(st.charAt(k-1))))
                        {
                            if (st.charAt(k-1)=='['||st.charAt(k-2)=='[')
                            {
                                Checking checks = new Checking();
                                for (int lk=0;lk<var.size();lk++)
                                {
                                    if (flaghabal==0)
                                    {
                                        flaghabal++;
                                    }
                                    else {
                                    errors+=checks.Array(st, errors, line_count, k,var.get(lk));
                                    }
                                }
                            }
                            Def+="Number (Value) ";
                            flag=0;
                        }
                        else if (st.charAt(k)!=' ')
                        {
                            if (flag==0)
                            {
                                Def+="Variable ";
                                String type="";
                                String tempval="";
                                String tempcount="0";
                                acess="";
                                for (int l=k;l<st.length();l++)
                                {
                                    if (st.charAt(l)=='='||st.charAt(l)==' '||st.charAt(l)=='<'||st.charAt(l)=='>'||st.charAt(l)==';'||st.charAt(l)=='[')
                                    {
                                        tempk=temp;
                                        if (flagp==1)
                                        {
                                            acess="Public";
                                            
                                        }
                                        if (flagp==2)
                                        {
                                            acess="Private";
                                        }
                                        if (st.charAt(l)=='[')
                                        {
                                            int kj=l+1;
                                            for (;;kj++)
                                            {
                                                if (!Character.isDigit(st.charAt(kj)))
                                                
                                                {
                                                    break;
                                                }
                                                if (tempcount.equals("0"))
                                                {
                                                    tempcount="";
                                                    tempcount+=st.charAt(kj);
                                                }
                                                else
                                                {
                                                    tempcount+=st.charAt(kj);
                                                }
                                            }
                                        }
                                        int count_char_letters=0;
                                        for (int nt=0;nt<var.size();nt++)
                                        {
                                            if(temp.equals(var.get(nt).name))
                                            {
                                            
                                                if (var.get(nt).type.equals("int"))
                                                {
                                                
                                                    if(st.charAt(l)=='=')
                                                    {
                                                    
                                                        for(int tv=l+1;tv<st.length();tv++)
                                                        {
                                                            if (st.charAt(tv)==';')
                                                            {
                                                                break;
                                                            }
                                                        
                                                            if(st.charAt(tv)!=' ')
                                                            {
                                                            
                                                                if(!Character.isDigit(st.charAt(tv)))
                                                                {
                                                                
                                                                    errors+="Error in line "+line_count+" Not Type"+System.getProperty("line.separator");
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                                         
                                                else if(var.get(nt).type.equals("char"))
                                                {
                                                    if(st.charAt(l)=='=')
                                                    {
                                                        for(int tv=l+1;tv<st.length();tv++)
                                                        {
                                                            if (st.charAt(tv)==';')
                                                            {
                                                                break;
                                                            }
                                                        
                                                            if(st.charAt(tv)!=' '&&st.charAt(tv)!='"'&&st.charAt(tv)!='\'')
                                                            {
                                                            
                                                                count_char_letters++;
                                                            }
                                                        }
                                                    }
                                                       
                                                    if(count_char_letters>1)
                                                    {
                                                    
                                                        errors+="Error in line "+line_count+" wrong char value"+System.getProperty("line.separator");
                                                    }
                                                }
                                            }
                                        }
                                                    
                                        if (st.charAt(l)=='=');
                                        {
                                            
                                            for (int jk=l;jk<st.length();jk++)
                                            {
                                                if (st.charAt(jk)==';'||st.charAt(jk)=='+'||st.charAt(jk)=='-')
                                                {
                                                    break;
                                                }
                                                else 
                                                {
                                                    tempval+=st.charAt(jk);
                                                }
                                            
                                            }
                                        }
                                        //integer
                                        if (flag_var[0]==1)
                                        {
                                            type="int";
                                            flag_var[0]=0;
                                            int tempo=0;
                                            for (int kl=0;kl<var.size();kl++)
                                            {
                                                if (temp.equals(var.get(kl).name))
                                                {
                                                    tempo=1;
                                                    break;
                                                }
                                            }
                                            if (tempo==0)
                                            {
                                                Variables p=new Variables(temp,type,tempval,tempcount,acess,flagno,1);
                                                var.add(p);
                                            }
                                            else {
                                                    errors+="Error in line "+line_count+" Variable is Alredey Defined"+System.getProperty("line.separator");
                                            }
                                            temp="";
                                            type="";
                                            tempval="";
                                        }
                                        //Char
                                        else if (flag_var[1]==1)
                                        {
                                            type="char";
                                            flag_var[1]=0;
                                            int tempo=0;
                                            for (int kl=0;kl<var.size();kl++)
                                            {
                                                if (temp.equals(var.get(kl).name))
                                                {
                                                    tempo=1;
                                                    break;
                                                }
                                            }
                                            if (tempo==0)
                                            {
                                                Variables p=new Variables(temp,type,tempval,tempcount,acess,flagno,1);
                                                var.add(p);
                                            }
                                            else {
                                                errors+="Error in line "+line_count+" Variable is Alredey Defined"+System.getProperty("line.separator");
                                            }
                                            temp="";
                                            type="";
                                            tempval="";
                                        }
                                        //float
                                        else if (flag_var[2]==1)
                                        {
                                            type="float";
                                            flag_var[2]=0;
                                            int tempo=0;
                                            for (int kl=0;kl<var.size();kl++)
                                            {
                                                if (temp.equals(var.get(kl).name))
                                                {
                                                    tempo=1;
                                                    break;
                                                }
                                            }
                                            if (tempo==0)
                                            {
                                                Variables p=new Variables(temp,type,tempval,tempcount,acess,flagno,1);
                                                var.add(p);
                                            }
                                            else {
                                                errors+="Error in line "+line_count+" Variable is Alredey Defined"+System.getProperty("line.separator");
                                            }
                                            temp="";
                                            type="";
                                            tempval="";
                                        }
                                        //string
                                        else if (flag_var[3]==1)
                                        {
                                            type="String";
                                            flag_var[3]=0;
                                            int tempo=0;
                                            for (int kl=0;kl<var.size();kl++)
                                            {
                                                if (temp.equals(var.get(kl).name))
                                                {
                                                    tempo=1;
                                                    break;
                                                }
                                            }
                                            if (tempo==0)
                                            {
                                                Variables p=new Variables(temp,type,tempval,tempcount, acess,flagno,1);
                                                var.add(p);
                                            }
                                            else {
                                                errors+="Error in line "+line_count+" Variable is Alredey Defined"+System.getProperty("line.separator");
                                            }
                                            temp="";
                                            type="";
                                            tempval="";
                                        }
                                        //double
                                        else if (flag_var[4]==1)
                                        {
                                            type="Double";
                                            flag_var[4]=0;
                                            int tempo=0;
                                            for (int kl=0;kl<var.size();kl++)
                                            {
                                                if (temp.equals(var.get(kl).name))
                                                {
                                                    tempo=1;
                                                    break;
                                                }
                                            }
                                            if (tempo==0)
                                            {
                                                Variables p=new Variables(temp,type,tempval,tempcount,acess,flagno,1);
                                                var.add(p);
                                            }
                                            else {
                                                errors+="Error in line "+line_count+" Variable is Alredey Defined"+System.getProperty("line.separator");
                                            }
                                            temp="";
                                            type="";
                                            tempval="";
                                        }

                                        break;
                                    }
                                    else
                                    {
                                        temp+=st.charAt(l);
                                    }
                                    if (st.charAt(l)=='=');
                                        {
                                            
                                            for (int jk=l;jk<var.size();jk++)
                                            {
                                               if (var.get(jk).name.equals(tempk))
                                               {
                                                   if(var.get(jk).Accessible==0)
                                                   {
                                                        errors+="Error in Line "+line_count+" Trying To Access A Private Variable not Availiable in Current Context"+System.getProperty("line.separator");
                                                   }
                                               }
                                            
                                            }
                                        }
                                }
                                flag=1;
                            }
                        }
                        
                        if(st.charAt(k)=='/'&&st.charAt(k+1)=='0')
                        {
                            errors+="Error in line "+ line_count +" Division by Zero"+System.getProperty("line.separator");

                        }
                        
                        count_letters++;
                    }
                    if(Lines[j].toString().charAt(k-1)!=';'&&(Lines[j].toString().charAt(0)=='f'&&Lines[j].toString().charAt(1)=='o'&&Lines[j].toString().charAt(2)=='r'&&(Lines[j].toString().charAt(3)==' '||Lines[j].toString().charAt(3)=='(')))
                    {   
                    }
                    else if(Lines[j].toString().charAt(k-1)!=';'&&(Lines[j].toString().charAt(k-1)==')'))
                    {
                    }
                    else if(Lines[j].toString().charAt(k-1)!=';'&&(Lines[j].toString().charAt(0)=='{'))
                    {
                    }
                    else if(Lines[j].toString().charAt(k-1)!=';'&&(Lines[j].toString().charAt(0)=='}'))
                    {
                    }
                    else if(Lines[j].toString().charAt(k-1)!=';'&&(Lines[j].toString().charAt(0)=='i'&&Lines[j].toString().charAt(1)=='f'&&(Lines[j].toString().charAt(2)==' '||Lines[j].toString().charAt(2)=='(')))
                    {   
                    }
                    else if(Lines[j].toString().charAt(k-1)!=';'&&(Lines[j].toString().charAt(0)=='w'&&Lines[j].toString().charAt(1)=='h'&&Lines[j].toString().charAt(2)=='i'&&Lines[j].toString().charAt(3)=='l'&&Lines[j].toString().charAt(4)=='e'&&(Lines[j].toString().charAt(5)==' '||Lines[j].toString().charAt(5)=='(')))
                    {   
                    }
                    else if(Lines[j].toString().charAt(k-1)!=';')
                    {
                        errors+="Error in line "+ line_count +" Missing simicolon"+System.getProperty("line.separator");
                    }
                    Def+=System.getProperty("line.separator");
                    count_letters=0;
                }
            }
        } catch (IOException ex) {
            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
        }
        ErrorChecing er = new ErrorChecing();
        /*errors="";
        for (int i=0;i<var.size();i++)
        {
            errors+=var.get(i).name+"---"+var.get(i).access+"---"+var.get(i).Accessible+"---"+var.get(i).Context+System.getProperty("line.separator");
        }*/
        er.jTextArea1.setText(errors);
        er.setVisible(true);
        FileWriter fileWriter2=null;
        try {
            fileWriter2 = new FileWriter("output.txt", true);
        } catch (IOException ex) {
            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
        }
        BufferedWriter bufferedWriter2 = new BufferedWriter(fileWriter2);
        try {
            bufferedWriter2.write(Def);
        } catch (IOException ex) {
            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            bufferedWriter2.close();
        } catch (IOException ex) {
            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            br.close();
        } catch (IOException ex) {
            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
        }
        f.delete();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        FileWriter fileWriter=null;
        try {
            fileWriter = new FileWriter("Temp.txt", true);
        } catch (IOException ex) {
            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
        }
        BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
        try {
            bufferedWriter.write(jTextArea1.getText());
        } catch (IOException ex) {
            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            bufferedWriter.close();
        } catch (IOException ex) {
            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
        }
        FileReader fr = null;
         File f = null;
         f =   new File("Temp.txt");      
        try {  
            fr = new FileReader(f);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
        }
        BufferedReader br = new BufferedReader(fr);
        String Code="";
        String Def="";
        String Def2="";
        int k=0;
        int flag=0;
        int[] flag_var={0,0,0,0,0};
        int line_count=0;
        int count_letters=0;
        String errors="";
        try {
            while ((Code=br.readLine())!=null)
            {
                String Lines[]=Code.split(System.getProperty("line.separator"));
                for (int j=0;j<Lines.length;j++)
                {
                    line_count++;
                    String st=Lines[j].toString();
                    for (k=0;k<st.length();k++)
                    {
                        if(st.charAt(k)=='+'||st.charAt(k)=='-'||st.charAt(k)=='*'||st.charAt(k)=='/')
                        {
                            Def+="Operators ";
                            flag=0;
                        }
                        else if(st.charAt(k)=='(')
                        {
                            Def+="( : Open Brackets ";
                            flag=0;
                        }
                        else if(st.charAt(k)==')')
                        {
                            Def+=") : Closed Brackets ";
                            flag=0;
                        }
                        else if(st.charAt(k)=='{')
                        {
                            Def+="{ : Open Curly Brackets ";
                            flag=0;
                        }
                        else if(st.charAt(k)=='}')
                        {
                            Def+="} : Closed Curly Brackets ";
                            flag=0;
                        }
                        else if(st.charAt(k)==',')
                        {
                            Def+=", : Comma ";
                            flag=0;
                        }
                        else if(st.charAt(k)==';')
                        {
                            Def+="; : Semicolon ";
                            flag=0;
                        }
                        else if(st.charAt(k)=='&'&&Code.charAt(k+1)=='&')
                        {
                            Def+="&& : And ";
                            flag=0;
                            k+=2;
                        }
                        else if(st.charAt(k)=='|'&&Code.charAt(k+1)=='|')
                        {
                            Def+="|| : OR ";
                            flag=0;
                            k+=2;
                        }
                        else if(st.charAt(k)=='<')
                        {
                            Def+="< : Less Than ";
                            flag=0;
                        }
                        else if(st.charAt(k)=='>')
                        {
                            Def+="> : Greater Than ";
                            flag=0;
                        }
                        else if(st.charAt(k)=='=')
                        {
                            Def+="= : Equal ";
                            flag=0;
                        }
                        else if(st.charAt(k)=='!')
                        {
                            Def+="! : Not ";
                            flag=0;
                        }
                        else if (st.charAt(k)=='i'&&st.charAt(k+1)=='n'&&st.charAt(k+2)=='t'&&st.charAt(k+3)==' ')
                        {
                            Def+="int : Identifier (Integer) ";
                            flag_var[0]=1;
                            flag=0;
                            k+=2;
                        }
                        else if (st.charAt(k)=='c'&&st.charAt(k+1)=='h'&&st.charAt(k+2)=='a'&&st.charAt(k+3)=='r'&&st.charAt(k+4)==' ')
                        {
                            Def+="char : Identifier (Character) ";
                            flag_var[1]=1;
                            flag=0;
                            k+=3;
                        }
                        else if (st.charAt(k)=='f'&&st.charAt(k+1)=='l'&&st.charAt(k+2)=='o'&&st.charAt(k+3)=='a'&&st.charAt(k+4)=='t')
                        {
                            Def+="float : Identifier (Float) ";
                            flag_var[2]=1;
                            flag=0;
                            k+=4;
                        }
                        else if (st.charAt(k)=='s'&&st.charAt(k+1)=='t'&&st.charAt(k+2)=='r'&&st.charAt(k+3)=='i'&&st.charAt(k+4)=='n'&&st.charAt(k+5)=='g')
                        {
                            Def+="string : Identifier (String) ";
                            flag_var[3]=1;
                            flag=0;
                            k+=5;
                        }
                        else if (st.charAt(k)=='d'&&st.charAt(k+1)=='o'&&st.charAt(k+2)=='u'&&st.charAt(k+3)=='b'&&st.charAt(k+4)=='l'&&st.charAt(k+5)=='e')
                        {
                            Def+="duble : Identifier (Double) ";
                            flag_var[4]=1;
                            flag=0;
                            k+=5;
                        }
                        else if (st.charAt(k)=='b'&&st.charAt(k+1)=='o'&&st.charAt(k+2)=='o'&&st.charAt(k+3)=='l')
                        {
                            Def+="bool : Identifier (Bool) ";
                            flag=0;
                            k+=3;
                        }
                        else if (st.charAt(k)=='f'&&st.charAt(k+1)=='o'&&st.charAt(k+2)=='r')
                        {
                            Def+="for : Reserved Word ";
                            k+=2;
                        }
                        else if (st.charAt(k)=='i'&&st.charAt(k+1)=='f')
                        {
                            Def+="if : Reserved Word ";
                            k+=1;
                        }
                        else if (st.charAt(k)=='d'&&st.charAt(k+1)=='o')
                        {
                            Def+="do : Reserved Word ";
                            k+=1;
                        }
                        else if (st.charAt(k)=='e'&&st.charAt(k+1)=='n'&&st.charAt(k+2)=='d')
                        {
                            Def+="end : Reserved Word ";
                            k+=2;
                        }
                        else if (st.charAt(k)=='w'&&st.charAt(k+1)=='h'&&st.charAt(k+2)=='i'&&st.charAt(k+3)=='l'&&st.charAt(k+4)=='e')
                        {
                            Def+="while : Reserved Word ";
                            k+=4;
                        }
                        else if (st.charAt(k)=='r'&&st.charAt(k+1)=='e'&&st.charAt(k+2)=='t'&&st.charAt(k+3)=='u'&&st.charAt(k+4)=='r'&&st.charAt(k+5)=='n')
                        {
                            Def+="return : Reserved Word ";
                            k+=5;
                        }
                        else if (st.charAt(k)=='b'&&st.charAt(k+1)=='r'&&st.charAt(k+2)=='e'&&st.charAt(k+3)=='a'&&st.charAt(k+4)=='k')
                        {
                            Def+="break : Reserved Word ";
                            k+=4;
                        }
                        else if (st.charAt(k)=='c'&&st.charAt(k+1)=='o'&&st.charAt(k+2)=='n'&&st.charAt(k+3)=='t'&&st.charAt(k+4)=='i'&&st.charAt(k+5)=='n'&&st.charAt(k+6)=='u'&&st.charAt(k+7)=='e')
                        {
                            Def+="continue : Reserved Word ";
                            k+=7;
                        }
                        else if (st.charAt(k)=='p'&&st.charAt(k+1)=='u'&&st.charAt(k+2)=='b'&&st.charAt(k+3)=='l'&&st.charAt(k+4)=='i'&&st.charAt(k+5)=='c')
                        {
                            Def+="Public ";
                            k+=5;
                        }
                        else if (st.charAt(k)=='p'&&st.charAt(k+1)=='r'&&st.charAt(k+2)=='i'&&st.charAt(k+3)=='v'&&st.charAt(k+4)=='a'&&st.charAt(k+5)=='t'&&st.charAt(k+6)=='e')
                        {
                            Def+="private ";
                            k+=6;
                        }
                        else if (Character.isDigit(st.charAt(k))&&(!Character.isLetter(st.charAt(k-1))))
                        {
                            Def+="Number (Value) ";
                            if (flag_var[0]!=1)
                            {
                                errors+="Error in line "+ line_count +" Not Type"+System.getProperty("line.separator");
                            }
                            else
                            {
                                flag_var[0]=0;
                            }
                            flag=0;
                        }
                        else if (st.charAt(k)!=' ')
                        {
                            if (flag==0)
                            {
                                Def+="Variable ";
                                
                                flag=1;
                            }
                        }
                        
                        if(st.charAt(k)=='/'&&st.charAt(k+1)=='0')
                        {
                            errors+="Error in line "+ line_count +" Division by Zero"+System.getProperty("line.separator");

                        }
                        
                        count_letters++;
                    }
                    if(Lines[j].toString().charAt(k-1)!=';'&&(Lines[j].toString().charAt(0)=='f'&&Lines[j].toString().charAt(1)=='o'&&Lines[j].toString().charAt(2)=='r'&&(Lines[j].toString().charAt(3)==' '||Lines[j].toString().charAt(3)=='(')))
                    {   
                    }
                    else if(Lines[j].toString().charAt(k-1)!=';'&&(Lines[j].toString().charAt(0)=='i'&&Lines[j].toString().charAt(1)=='f'&&(Lines[j].toString().charAt(2)==' '||Lines[j].toString().charAt(2)=='(')))
                    {   
                    }
                    else if(Lines[j].toString().charAt(k-1)!=';'&&(Lines[j].toString().charAt(0)=='w'&&Lines[j].toString().charAt(1)=='h'&&Lines[j].toString().charAt(2)=='i'&&Lines[j].toString().charAt(3)=='l'&&Lines[j].toString().charAt(4)=='e'&&(Lines[j].toString().charAt(5)==' '||Lines[j].toString().charAt(5)=='(')))
                    {   
                    }
                    else if(Lines[j].toString().charAt(k-1)!=';')
                    {
                        errors+="Error in line "+ line_count +" Missing simicolon"+System.getProperty("line.separator");
                    }
                    Def+=System.getProperty("line.separator");
                    count_letters=0;
                }
            }
        } catch (IOException ex) {
            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
        }
        CodeBreak cb = new CodeBreak();
        cb.jTextArea1.setText(Def);
        cb.setVisible(true);
        FileWriter fileWriter2=null;
        try {
            fileWriter2 = new FileWriter("output.txt", true);
        } catch (IOException ex) {
            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
        }
        BufferedWriter bufferedWriter2 = new BufferedWriter(fileWriter2);
        try {
            bufferedWriter2.write(Def);
        } catch (IOException ex) {
            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            bufferedWriter2.close();
        } catch (IOException ex) {
            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            br.close();
        } catch (IOException ex) {
            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
        }
        f.delete();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        Memory mem = new Memory();                                       
        // TODO add your handling code here
        ArrayList<Variables> varb=new ArrayList<Variables>();
        int flaghabal=0;
        String temp="";
        FileWriter fileWriter=null;
        try {
            fileWriter = new FileWriter("Temp.txt", true);
        } catch (IOException ex) {
            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
        }
        BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
        try {
            bufferedWriter.write(jTextArea1.getText());
        } catch (IOException ex) {
            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            bufferedWriter.close();
        } catch (IOException ex) {
            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
        }
        FileReader fr = null;
         File f = null;
         f =   new File("Temp.txt");      
        try {  
            fr = new FileReader(f);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
        }
        BufferedReader br = new BufferedReader(fr);
        String Code="";
        String Def="";
        String Def2="";
        String Values="";
        int k=0;
        int flag=0;
        int[] flag_var={0,0,0,0,0};
        int line_count=0;
        int count_letters=0;
        String errors="";
        String acess="";
        int flagp=0;
        int []flagfun={0,0,0,0,0,0};
        int flagno=0;
        String tempk="";
        try {
            while ((Code=br.readLine())!=null)
            {
                String Lines[]=Code.split(System.getProperty("line.separator"));
                for (int j=0;j<Lines.length;j++)
                {
                    line_count++;
                    String st=Lines[j].toString();
                    for (k=0;k<st.length();k++)
                    {
                        if(st.charAt(k)=='+'||st.charAt(k)=='-'||st.charAt(k)=='*'||st.charAt(k)=='/')
                        {
                            Def+="Operators ";
                            flag=0;
                        }
                        else if(st.charAt(k)=='(')
                        {
                            Def+="( : Open Brackets ";
                            flag=0;
                        }
                        else if(st.charAt(k)==')')
                        {
                            Def+=") : Closed Brackets ";
                            flag=0;
                        }
                        else if(st.charAt(k)=='{')
                        {
                            Def+="{ : Open Curly Brackets ";
                            flag=0;
                        }
                        else if(st.charAt(k)=='}')
                        {
                            Def+="} : Closed Curly Brackets ";
                            flag=0;
                        }
                        else if(st.charAt(k)==',')
                        {
                            Def+=", : Comma ";
                            flag=0;
                        }
                        else if(st.charAt(k)==';')
                        {
                            Def+="; : Semicolon ";
                            flag=0;
                        }
                        else if(st.charAt(k)=='&'&&Code.charAt(k+1)=='&')
                        {
                            Def+="&& : And ";
                            flag=0;
                            k+=2;
                        }
                        else if(st.charAt(k)=='|'&&Code.charAt(k+1)=='|')
                        {
                            Def+="|| : OR ";
                            flag=0;
                            k+=2;
                        }
                        else if(st.charAt(k)=='<')
                        {
                            Def+="< : Less Than ";
                            flag=0;
                        }
                        else if(st.charAt(k)=='>')
                        {
                            Def+="> : Greater Than ";
                            flag=0;
                        }
                        else if(st.charAt(k)=='=')
                        {
                            Def+="= : Equal ";
                            flag=0;
                        }
                        else if(st.charAt(k)=='!')
                        {
                            Def+="! : Not ";
                            flag=0;
                        }
                        else if (st.charAt(k)=='i'&&st.charAt(k+1)=='n'&&st.charAt(k+2)=='t'&&st.charAt(k+3)==' ')
                        {
                            Def+="int : Identifier (Integer) ";
                            flag_var[0]=1;
                            flag=0;
                            k+=2;
                        }
                        else if (st.charAt(k)=='c'&&st.charAt(k+1)=='h'&&st.charAt(k+2)=='a'&&st.charAt(k+3)=='r'&&st.charAt(k+4)==' ')
                        {
                            Def+="char : Identifier (Character) ";
                            flag_var[1]=1;
                            flag=0;
                            k+=3;
                        }
                        else if (st.charAt(k)=='f'&&st.charAt(k+1)=='l'&&st.charAt(k+2)=='o'&&st.charAt(k+3)=='a'&&st.charAt(k+4)=='t')
                        {
                            Def+="float : Identifier (Float) ";
                            flag_var[2]=1;
                            flag=0;
                            k+=4;
                        }
                        else if (st.charAt(k)=='s'&&st.charAt(k+1)=='t'&&st.charAt(k+2)=='r'&&st.charAt(k+3)=='i'&&st.charAt(k+4)=='n'&&st.charAt(k+5)=='g')
                        {
                            Def+="string : Identifier (String) ";
                            flag_var[3]=1;
                            flag=0;
                            k+=5;
                        }
                        else if (st.charAt(k)=='d'&&st.charAt(k+1)=='o'&&st.charAt(k+2)=='u'&&st.charAt(k+3)=='b'&&st.charAt(k+4)=='l'&&st.charAt(k+5)=='e')
                        {
                            Def+="duble : Identifier (Double) ";
                            flag_var[4]=1;
                            flag=0;
                            k+=5;
                        }
                        else if (st.charAt(k)=='b'&&st.charAt(k+1)=='o'&&st.charAt(k+2)=='o'&&st.charAt(k+3)=='l')
                        {
                            Def+="bool : Identifier (Bool) ";
                            flag=0;
                            k+=3;
                        }
                        else if (st.charAt(k)=='f'&&st.charAt(k+1)=='o'&&st.charAt(k+2)=='r')
                        {
                            Def+="for : Reserved Word ";
                            
                            k+=2;
                            int F=k+2;
                            if (((st.charAt(F)!='('
                                             &&(st.charAt(F)==' '&&st.charAt(F+1)!='(')
                                            )))
                            {
                                    errors+="Error In Line "+ line_count + " Missing Open Bracket"+System.getProperty("line.separator");
                                    break;
                            }
                            else 
                            {
                                if (st.charAt(F+1)=='(')
                                {
                                    F++;
                                }
                                F++;
                                Checking check = new Checking();
                                errors+=check.variabless2(st, errors, line_count,F);
                            }
                        }
                        else if (st.charAt(k)=='i'&&st.charAt(k+1)=='f')
                        {
                            Def+="if : Reserved Word ";
                            int flagct=0;
                            k+=1;
                            int l=k+1;
                            if (((st.charAt(l)!='('
                                             &&(st.charAt(l)==' '&&st.charAt(l+1)!='(')
                                            )))
                            {
                                    errors+="Error In Line "+ line_count + " Missing Open Bracket"+System.getProperty("line.separator");
                                    break;
                            }
                            else 
                            {
                                if (st.charAt(l+1)=='(')
                                {
                                    l++;
                                }
                                l++;
                                Checking check = new Checking();
                                errors+=check.variabless(st, errors, line_count,l);
                            }
                            
                            
                        }
                        else if (st.charAt(k)=='d'&&st.charAt(k+1)=='o')
                        {
                            Def+="do : Reserved Word ";
                            k+=1;
                        }
                        else if (st.charAt(k)=='e'&&st.charAt(k+1)=='n'&&st.charAt(k+2)=='d')
                        {
                            Def+="end : Reserved Word ";
                            k+=2;
                        }
                        else if (st.charAt(k)=='w'&&st.charAt(k+1)=='h'&&st.charAt(k+2)=='i'&&st.charAt(k+3)=='l'&&st.charAt(k+4)=='e')
                        {
                            Def+="while : Reserved Word ";
                            k+=4;
                        }
                        else if (st.charAt(k)=='r'&&st.charAt(k+1)=='e'&&st.charAt(k+2)=='t'&&st.charAt(k+3)=='u'&&st.charAt(k+4)=='r'&&st.charAt(k+5)=='n')
                        {
                            Def+="return : Reserved Word ";
                            k+=5;
                        }
                        else if (st.charAt(k)=='b'&&st.charAt(k+1)=='r'&&st.charAt(k+2)=='e'&&st.charAt(k+3)=='a'&&st.charAt(k+4)=='k')
                        {
                            Def+="break : Reserved Word ";
                            k+=4;
                        }
                        else if (st.charAt(k)=='c'&&st.charAt(k+1)=='o'&&st.charAt(k+2)=='n'&&st.charAt(k+3)=='t'&&st.charAt(k+4)=='i'&&st.charAt(k+5)=='n'&&st.charAt(k+6)=='u'&&st.charAt(k+7)=='e')
                        {
                            Def+="continue : Reserved Word ";
                            k+=7;
                        }
                        else if (st.charAt(k)=='p'&&st.charAt(k+1)=='u'&&st.charAt(k+2)=='b'&&st.charAt(k+3)=='l'&&st.charAt(k+4)=='i'&&st.charAt(k+5)=='c')
                        {
                            Def+="Public";
                            flagp=1;
                            k+=5;
                            flag=0;
                        }
                        else if (st.charAt(k)=='p'&&st.charAt(k+1)=='r'&&st.charAt(k+2)=='i'&&st.charAt(k+3)=='v'&&st.charAt(k+4)=='a'&&st.charAt(k+5)=='t'&&st.charAt(k+6)=='e')
                        {
                            Def+="private";
                            flagp=2;
                            k+=6;
                            flag=0;
                        }
                        else if (st.charAt(k)=='c'&&st.charAt(k+1)=='l'&&st.charAt(k+2)=='a'&&st.charAt(k+3)=='s'&&st.charAt(k+4)=='s')
                        {
                            flagfun[flagno]=1;
                            flagno++;
                            k+=5;
                            flag=0;
                        }
                        else if (st.charAt(k)=='f'&&st.charAt(k+1)=='u'&&st.charAt(k+2)=='n'&&st.charAt(k+3)=='c'&&st.charAt(k+4)=='t'&&st.charAt(k+5)=='i'&&st.charAt(k+6)=='o'&&st.charAt(k+7)=='n')
                        {
                            flagfun[flagno]=1;
                            flagno++;
                            k+=7;
                            flag=0;
                        }
                        else if (st.charAt(k)=='L')
                        {
                            
                            flagfun[flagno]=0;
                            if(flagno>0)
                            {
                                flagno--;
                            }
                            for (int oop=0;oop<varb.size();oop++)
                            {
                                if (varb.get(oop).access.equals("Private"))
                                {
                                    if (varb.get(oop).Context>flagno)
                                    {
                                        varb.get(oop).Accessible=0;
                                    }
                                }
                            }
                            flag=0;
                            
                        }
                        else if (Character.isDigit(st.charAt(k))&&(!Character.isLetter(st.charAt(k-1))))
                        {
                            if (st.charAt(k-1)=='['||st.charAt(k-2)=='[')
                            {
                                Checking checks = new Checking();
                                for (int lk=0;lk<varb.size();lk++)
                                {
                                    if (flaghabal==0)
                                    {
                                        flaghabal++;
                                    }
                                    else {
                                    errors+=checks.Array(st, errors, line_count, k,varb.get(lk));
                                    }
                                }
                            }
                            Def+="Number (Value) ";
                            flag=0;
                        }
                        else if (st.charAt(k)!=' ')
                        {
                            if (flag==0)
                            {
                                Def+="Variable ";
                                String type="";
                                String tempval="";
                                String tempcount="0";
                                acess="";
                                temp="";
                                for (int l=k;l<st.length();l++)
                                {
                                    if (st.charAt(l)=='='||st.charAt(l)==' '||st.charAt(l)=='<'||st.charAt(l)=='>'||st.charAt(l)==';'||st.charAt(l)=='['||st.charAt(l)=='+'||st.charAt(l)=='-'||st.charAt(l)=='*'||st.charAt(l)=='/')
                                    {
                                        tempk=temp;
                                        int tempflag=0;
                                        for (int klm=0;klm<varb.size();klm++)
                                        {
                                            
                                            if (varb.get(klm).name.equals(temp))
                                            {
                                                if (st.charAt(l)=='=')
                                                {
                                                    NewJFrame nj=new NewJFrame();
                                                    String tempoo="";
                                                    String tempoo2="";
                                                    Adding add=new Adding();
                                                    varb.get(klm).value=add.Addi(st,varb,l+1,Values,line_count,klm,tempflag,tempoo,tempoo2);
                                                    Values+=nj.jTextArea1.getText();
                                                }
                                                else if(st.charAt(l)=='+')
                                                {
                                                    if (st.charAt(l+1)!='+')
                                                    {
                                                        if (st.charAt(l+1)=='=')
                                                        {
                                                            String Plusqual="";
                                                            if (st.charAt(l+2)==' ')
                                                            {
                                                                int tok=l+3;
                                                                if (Character.isLetter(st.charAt(tok)))
                                                                {
                                                                   for (;tok<st.length();tok++)
                                                                   {
                                                                       if (!Character.isLetter(st.charAt(tok)))
                                                                       {
                                                                           break;
                                                                       }
                                                                       else
                                                                       {
                                                                            Plusqual+=st.charAt(tok);
                                                                       }
                                                                   }
                                                                   int lkj=0;
                                                                   for (;lkj<varb.size();lkj++)
                                                                   {
                                                                       if (varb.get(lkj).name.equals(Plusqual))
                                                                       {
                                                                           break;
                                                                       }
                                                                   }
                                                                    String go="";
                                                                    String goo="";
                                                                    
                                                                    for (int lkj2=0;lkj2<varb.get(klm).value.length();lkj2++)
                                                                    {
                                                                        if (varb.get(klm).value.charAt(lkj2)!='=')
                                                                        {
                                                                            go+=varb.get(klm).value.charAt(lkj2);
                                                                        }
                                                                    }
                                                                    for (int lkj2=0;lkj2<varb.get(lkj).value.length();lkj2++)
                                                                    {
                                                                        if (varb.get(lkj).value.charAt(lkj2)!='=')
                                                                        {
                                                                            goo+=varb.get(lkj).value.charAt(lkj2);
                                                                        }
                                                                    }
                                                                   int tempooo;
                                                                   tempooo=Integer.parseInt(go)+Integer.parseInt(goo);
                                                                   Values+="The Value Of Variable [ "+varb.get(klm).name+" ] In line "+line_count+" From { "+varb.get(klm).value+" }To "+tempooo+System.getProperty("line.separator");
                                                                   varb.get(klm).value=Integer.toString(tempooo);
                                                                }
                                                                else if (Character.isDigit(st.charAt(tok)))
                                                                {
                                                                   for (;tok<st.length();tok++)
                                                                   {
                                                                       if (!Character.isDigit(st.charAt(tok)))
                                                                       {
                                                                           break;
                                                                       }
                                                                       else
                                                                       {
                                                                            Plusqual+=st.charAt(tok);
                                                                       }
                                                                   }
                                                                    String go="";
                                                                    
                                                                    for (int lkj2=0;lkj2<varb.get(klm).value.length();lkj2++)
                                                                    {
                                                                        if (varb.get(klm).value.charAt(lkj2)!='=')
                                                                        {
                                                                            go+=varb.get(klm).value.charAt(lkj2);
                                                                        }
                                                                    } 
                                                                   int tempooo;
                                                                   tempooo=Integer.parseInt(go)+Integer.parseInt(Plusqual);
                                                                   Values+="The Value Of Variable [ "+varb.get(klm).name+" ] In line "+line_count+" From { "+varb.get(klm).value+" }To "+tempooo+System.getProperty("line.separator");
                                                                   varb.get(klm).value=Integer.toString(tempooo);
                                                                }
                                                            }
                                                            else
                                                            {
                                                                int tok=l+2;
                                                                if (Character.isLetter(st.charAt(tok)))
                                                                {
                                                                   for (;tok<st.length();tok++)
                                                                   {
                                                                       if (!Character.isLetter(st.charAt(tok)))
                                                                       {
                                                                           break;
                                                                       }
                                                                       else
                                                                       {
                                                                            Plusqual+=st.charAt(tok);
                                                                       }
                                                                   }
                                                                   int lkj=0;
                                                                   for (;lkj<varb.size();lkj++)
                                                                   {
                                                                       if (varb.get(lkj).name.equals(Plusqual))
                                                                       {
                                                                           break;
                                                                       }
                                                                   }
                                                                    String go="";
                                                                    String goo="";
                                                                    
                                                                    for (int lkj2=0;lkj2<varb.get(klm).value.length();lkj2++)
                                                                    {
                                                                        if (varb.get(klm).value.charAt(lkj2)!='=')
                                                                        {
                                                                            go+=varb.get(klm).value.charAt(lkj2);
                                                                        }
                                                                    }
                                                                    for (int lkj2=0;lkj2<varb.get(lkj).value.length();lkj2++)
                                                                    {
                                                                        if (varb.get(lkj).value.charAt(lkj2)!='=')
                                                                        {
                                                                            goo+=varb.get(lkj).value.charAt(lkj2);
                                                                        }
                                                                    }
                                                                   int tempooo;
                                                                   tempooo=Integer.parseInt(go)+Integer.parseInt(goo);
                                                                   Values+="The Value Of Variable [ "+varb.get(klm).name+" ] In line "+line_count+" From { "+varb.get(klm).value+" }To "+tempooo+System.getProperty("line.separator");
                                                                   varb.get(klm).value=Integer.toString(tempooo);
                                                                }
                                                                else if (Character.isDigit(st.charAt(tok)))
                                                                {
                                                                   for (;tok<st.length();tok++)
                                                                   {
                                                                       if (!Character.isDigit(st.charAt(tok)))
                                                                       {
                                                                           break;
                                                                       }
                                                                       else
                                                                       {
                                                                            Plusqual+=st.charAt(tok);
                                                                       }
                                                                   }
                                                                    String go="";
                                                                    
                                                                    for (int lkj2=0;lkj2<varb.get(klm).value.length();lkj2++)
                                                                    {
                                                                        if (varb.get(klm).value.charAt(lkj2)!='=')
                                                                        {
                                                                            go+=varb.get(klm).value.charAt(lkj2);
                                                                        }
                                                                    } 
                                                                   int tempooo;
                                                                   tempooo=Integer.parseInt(go)+Integer.parseInt(Plusqual);
                                                                   Values+="The Value Of Variable [ "+varb.get(klm).name+" ] In line "+line_count+" From { "+varb.get(klm).value+" }To "+tempooo+System.getProperty("line.separator");
                                                                   varb.get(klm).value=Integer.toString(tempooo);
                                                                }
                                                            }
                      
                                                        }
                                                    }
                                                    else
                                                    {
                                                        String go="";
                                                        for (int lkj=0;lkj<varb.get(klm).value.length();lkj++)
                                                        {
                                                            if (varb.get(klm).value.charAt(lkj)!='=')
                                                            {
                                                                go+=varb.get(klm).value.charAt(lkj);
                                                            }
                                                        }
                                                        int tempooo;
                                                        tempooo=Integer.parseInt(go)+1;
                                                        Values+="The Value Of Variable [ "+varb.get(klm).name+" ] In line "+line_count+" From { "+varb.get(klm).value+" }To "+tempooo+System.getProperty("line.separator");
                                                        varb.get(klm).value=Integer.toString(tempooo);
                                                    }
                                                }
                                                else if(st.charAt(l)=='-')
                                                {
                                                    if (st.charAt(l+1)!='-')
                                                    {
                                                        if (st.charAt(l+1)=='=')
                                                        {
                                                            String Plusqual="";
                                                            if (st.charAt(l+2)==' ')
                                                            {
                                                                int tok=l+3;
                                                                if (Character.isLetter(st.charAt(tok)))
                                                                {
                                                                   for (;tok<st.length();tok++)
                                                                   {
                                                                       if (!Character.isLetter(st.charAt(tok)))
                                                                       {
                                                                           break;
                                                                       }
                                                                       else
                                                                       {
                                                                            Plusqual+=st.charAt(tok);
                                                                       }
                                                                   }
                                                                   int lkj=0;
                                                                   for (;lkj<varb.size();lkj++)
                                                                   {
                                                                       if (varb.get(lkj).name.equals(Plusqual))
                                                                       {
                                                                           break;
                                                                       }
                                                                   }
                                                                    String go="";
                                                                    String goo="";
                                                                    
                                                                    for (int lkj2=0;lkj2<varb.get(klm).value.length();lkj2++)
                                                                    {
                                                                        if (varb.get(klm).value.charAt(lkj2)!='=')
                                                                        {
                                                                            go+=varb.get(klm).value.charAt(lkj2);
                                                                        }
                                                                    }
                                                                    for (int lkj2=0;lkj2<varb.get(lkj).value.length();lkj2++)
                                                                    {
                                                                        if (varb.get(lkj).value.charAt(lkj2)!='=')
                                                                        {
                                                                            goo+=varb.get(lkj).value.charAt(lkj2);
                                                                        }
                                                                    }
                                                                   int tempooo;
                                                                   tempooo=Integer.parseInt(go)-Integer.parseInt(goo);
                                                                   Values+="The Value Of Variable [ "+varb.get(klm).name+" ] In line "+line_count+" From { "+varb.get(klm).value+" }To "+tempooo+System.getProperty("line.separator");
                                                                   varb.get(klm).value=Integer.toString(tempooo);
                                                                }
                                                                else if (Character.isDigit(st.charAt(tok)))
                                                                {
                                                                   for (;tok<st.length();tok++)
                                                                   {
                                                                       if (!Character.isDigit(st.charAt(tok)))
                                                                       {
                                                                           break;
                                                                       }
                                                                       else
                                                                       {
                                                                            Plusqual+=st.charAt(tok);
                                                                       }
                                                                   }
                                                                    String go="";
                                                                    
                                                                    for (int lkj2=0;lkj2<varb.get(klm).value.length();lkj2++)
                                                                    {
                                                                        if (varb.get(klm).value.charAt(lkj2)!='=')
                                                                        {
                                                                            go+=varb.get(klm).value.charAt(lkj2);
                                                                        }
                                                                    } 
                                                                   int tempooo;
                                                                   tempooo=Integer.parseInt(go)-Integer.parseInt(Plusqual);
                                                                   Values+="The Value Of Variable [ "+varb.get(klm).name+" ] In line "+line_count+" From { "+varb.get(klm).value+" }To "+tempooo+System.getProperty("line.separator");
                                                                   varb.get(klm).value=Integer.toString(tempooo);
                                                                }
                                                            }
                                                            else
                                                            {
                                                                int tok=l+2;
                                                                if (Character.isLetter(st.charAt(tok)))
                                                                {
                                                                   for (;tok<st.length();tok++)
                                                                   {
                                                                       if (!Character.isLetter(st.charAt(tok)))
                                                                       {
                                                                           break;
                                                                       }
                                                                       else
                                                                       {
                                                                            Plusqual+=st.charAt(tok);
                                                                       }
                                                                   }
                                                                   int lkj=0;
                                                                   for (;lkj<varb.size();lkj++)
                                                                   {
                                                                       if (varb.get(lkj).name.equals(Plusqual))
                                                                       {
                                                                           break;
                                                                       }
                                                                   }
                                                                    String go="";
                                                                    String goo="";
                                                                    
                                                                    for (int lkj2=0;lkj2<varb.get(klm).value.length();lkj2++)
                                                                    {
                                                                        if (varb.get(klm).value.charAt(lkj2)!='=')
                                                                        {
                                                                            go+=varb.get(klm).value.charAt(lkj2);
                                                                        }
                                                                    }
                                                                    for (int lkj2=0;lkj2<varb.get(lkj).value.length();lkj2++)
                                                                    {
                                                                        if (varb.get(lkj).value.charAt(lkj2)!='=')
                                                                        {
                                                                            goo+=varb.get(lkj).value.charAt(lkj2);
                                                                        }
                                                                    }
                                                                   int tempooo;
                                                                   tempooo=Integer.parseInt(go)-Integer.parseInt(goo);
                                                                   Values+="The Value Of Variable [ "+varb.get(klm).name+" ] In line "+line_count+" From { "+varb.get(klm).value+" }To "+tempooo+System.getProperty("line.separator");
                                                                   varb.get(klm).value=Integer.toString(tempooo);
                                                                }
                                                                else if (Character.isDigit(st.charAt(tok)))
                                                                {
                                                                   for (;tok<st.length();tok++)
                                                                   {
                                                                       if (!Character.isDigit(st.charAt(tok)))
                                                                       {
                                                                           break;
                                                                       }
                                                                       else
                                                                       {
                                                                            Plusqual+=st.charAt(tok);
                                                                       }
                                                                   }
                                                                    String go="";
                                                                    
                                                                    for (int lkj2=0;lkj2<varb.get(klm).value.length();lkj2++)
                                                                    {
                                                                        if (varb.get(klm).value.charAt(lkj2)!='=')
                                                                        {
                                                                            go+=varb.get(klm).value.charAt(lkj2);
                                                                        }
                                                                    } 
                                                                   int tempooo;
                                                                   tempooo=Integer.parseInt(go)-Integer.parseInt(Plusqual);
                                                                   Values+="The Value Of Variable [ "+varb.get(klm).name+" ] In line "+line_count+" From { "+varb.get(klm).value+" }To "+tempooo+System.getProperty("line.separator");
                                                                   varb.get(klm).value=Integer.toString(tempooo);
                                                                }
                                                            }
                      
                                                        }
                                                    }
                                                    else
                                                    {
                                                        String go="";
                                                        for (int lkj=0;lkj<varb.get(klm).value.length();lkj++)
                                                        {
                                                            if (varb.get(klm).value.charAt(lkj)!='=')
                                                            {
                                                                go+=varb.get(klm).value.charAt(lkj);
                                                            }
                                                        }
                                                        int tempooo;
                                                        tempooo=Integer.parseInt(go)-1;
                                                        Values+="The Value Of Variable [ "+varb.get(klm).name+" ] In line "+line_count+" From { "+varb.get(klm).value+" }To "+tempooo+System.getProperty("line.separator");
                                                        varb.get(klm).value=Integer.toString(tempooo);
                                                    }
                                                }
                                                else if(st.charAt(l)=='*')
                                                {
                                                    if (st.charAt(l+1)!='*')
                                                    {
                                                        if (st.charAt(l+1)=='=')
                                                        {
                                                            String Plusqual="";
                                                            if (st.charAt(l+2)==' ')
                                                            {
                                                                int tok=l+3;
                                                                if (Character.isLetter(st.charAt(tok)))
                                                                {
                                                                   for (;tok<st.length();tok++)
                                                                   {
                                                                       if (!Character.isLetter(st.charAt(tok)))
                                                                       {
                                                                           break;
                                                                       }
                                                                       else
                                                                       {
                                                                            Plusqual+=st.charAt(tok);
                                                                       }
                                                                   }
                                                                   int lkj=0;
                                                                   for (;lkj<varb.size();lkj++)
                                                                   {
                                                                       if (varb.get(lkj).name.equals(Plusqual))
                                                                       {
                                                                           break;
                                                                       }
                                                                   }
                                                                    String go="";
                                                                    String goo="";
                                                                    
                                                                    for (int lkj2=0;lkj2<varb.get(klm).value.length();lkj2++)
                                                                    {
                                                                        if (varb.get(klm).value.charAt(lkj2)!='=')
                                                                        {
                                                                            go+=varb.get(klm).value.charAt(lkj2);
                                                                        }
                                                                    }
                                                                    for (int lkj2=0;lkj2<varb.get(lkj).value.length();lkj2++)
                                                                    {
                                                                        if (varb.get(lkj).value.charAt(lkj2)!='=')
                                                                        {
                                                                            goo+=varb.get(lkj).value.charAt(lkj2);
                                                                        }
                                                                    }
                                                                   int tempooo;
                                                                   tempooo=Integer.parseInt(go)*Integer.parseInt(goo);
                                                                   Values+="The Value Of Variable [ "+varb.get(klm).name+" ] In line "+line_count+" From { "+varb.get(klm).value+" }To "+tempooo+System.getProperty("line.separator");
                                                                   varb.get(klm).value=Integer.toString(tempooo);
                                                                }
                                                                else if (Character.isDigit(st.charAt(tok)))
                                                                {
                                                                   for (;tok<st.length();tok++)
                                                                   {
                                                                       if (!Character.isDigit(st.charAt(tok)))
                                                                       {
                                                                           break;
                                                                       }
                                                                       else
                                                                       {
                                                                            Plusqual+=st.charAt(tok);
                                                                       }
                                                                   }
                                                                    String go="";
                                                                    
                                                                    for (int lkj2=0;lkj2<varb.get(klm).value.length();lkj2++)
                                                                    {
                                                                        if (varb.get(klm).value.charAt(lkj2)!='=')
                                                                        {
                                                                            go+=varb.get(klm).value.charAt(lkj2);
                                                                        }
                                                                    } 
                                                                   int tempooo;
                                                                   tempooo=Integer.parseInt(go)*Integer.parseInt(Plusqual);
                                                                   Values+="The Value Of Variable [ "+varb.get(klm).name+" ] In line "+line_count+" From { "+varb.get(klm).value+" }To "+tempooo+System.getProperty("line.separator");
                                                                   varb.get(klm).value=Integer.toString(tempooo);
                                                                }
                                                            }
                                                            else
                                                            {
                                                                int tok=l+2;
                                                                if (Character.isLetter(st.charAt(tok)))
                                                                {
                                                                   for (;tok<st.length();tok++)
                                                                   {
                                                                       if (!Character.isLetter(st.charAt(tok)))
                                                                       {
                                                                           break;
                                                                       }
                                                                       else
                                                                       {
                                                                            Plusqual+=st.charAt(tok);
                                                                       }
                                                                   }
                                                                   int lkj=0;
                                                                   for (;lkj<varb.size();lkj++)
                                                                   {
                                                                       if (varb.get(lkj).name.equals(Plusqual))
                                                                       {
                                                                           break;
                                                                       }
                                                                   }
                                                                    String go="";
                                                                    String goo="";
                                                                    
                                                                    for (int lkj2=0;lkj2<varb.get(klm).value.length();lkj2++)
                                                                    {
                                                                        if (varb.get(klm).value.charAt(lkj2)!='=')
                                                                        {
                                                                            go+=varb.get(klm).value.charAt(lkj2);
                                                                        }
                                                                    }
                                                                    for (int lkj2=0;lkj2<varb.get(lkj).value.length();lkj2++)
                                                                    {
                                                                        if (varb.get(lkj).value.charAt(lkj2)!='=')
                                                                        {
                                                                            goo+=varb.get(lkj).value.charAt(lkj2);
                                                                        }
                                                                    }
                                                                   int tempooo;
                                                                   tempooo=Integer.parseInt(go)*Integer.parseInt(goo);
                                                                   Values+="The Value Of Variable [ "+varb.get(klm).name+" ] In line "+line_count+" From { "+varb.get(klm).value+" }To "+tempooo+System.getProperty("line.separator");
                                                                   varb.get(klm).value=Integer.toString(tempooo);
                                                                }
                                                                else if (Character.isDigit(st.charAt(tok)))
                                                                {
                                                                   for (;tok<st.length();tok++)
                                                                   {
                                                                       if (!Character.isDigit(st.charAt(tok)))
                                                                       {
                                                                           break;
                                                                       }
                                                                       else
                                                                       {
                                                                            Plusqual+=st.charAt(tok);
                                                                       }
                                                                   }
                                                                    String go="";
                                                                    
                                                                    for (int lkj2=0;lkj2<varb.get(klm).value.length();lkj2++)
                                                                    {
                                                                        if (varb.get(klm).value.charAt(lkj2)!='=')
                                                                        {
                                                                            go+=varb.get(klm).value.charAt(lkj2);
                                                                        }
                                                                    } 
                                                                   int tempooo;
                                                                   tempooo=Integer.parseInt(go)*Integer.parseInt(Plusqual);
                                                                   Values+="The Value Of Variable [ "+varb.get(klm).name+" ] In line "+line_count+" From { "+varb.get(klm).value+" }To "+tempooo+System.getProperty("line.separator");
                                                                   varb.get(klm).value=Integer.toString(tempooo);
                                                                }
                                                            }
                      
                                                        }
                                                    }
                                                    else
                                                    {
                                                        String go="";
                                                        for (int lkj=0;lkj<varb.get(klm).value.length();lkj++)
                                                        {
                                                            if (varb.get(klm).value.charAt(lkj)!='=')
                                                            {
                                                                go+=varb.get(klm).value.charAt(lkj);
                                                            }
                                                        }
                                                        int tempooo;
                                                        tempooo=Integer.parseInt(go)*1;
                                                        Values+="The Value Of Variable [ "+varb.get(klm).name+" ] In line "+line_count+" From { "+varb.get(klm).value+" }To "+tempooo+System.getProperty("line.separator");
                                                        varb.get(klm).value=Integer.toString(tempooo);
                                                    }
                                                }
                                                else if(st.charAt(l)=='/')
                                                {
                                                    if (st.charAt(l+1)!='/')
                                                    {
                                                        if (st.charAt(l+1)=='=')
                                                        {
                                                            String Plusqual="";
                                                            if (st.charAt(l+2)==' ')
                                                            {
                                                                int tok=l+3;
                                                                if (Character.isLetter(st.charAt(tok)))
                                                                {
                                                                   for (;tok<st.length();tok++)
                                                                   {
                                                                       if (!Character.isLetter(st.charAt(tok)))
                                                                       {
                                                                           break;
                                                                       }
                                                                       else
                                                                       {
                                                                            Plusqual+=st.charAt(tok);
                                                                       }
                                                                   }
                                                                   int lkj=0;
                                                                   for (;lkj<varb.size();lkj++)
                                                                   {
                                                                       if (varb.get(lkj).name.equals(Plusqual))
                                                                       {
                                                                           break;
                                                                       }
                                                                   }
                                                                    String go="";
                                                                    String goo="";
                                                                    
                                                                    for (int lkj2=0;lkj2<varb.get(klm).value.length();lkj2++)
                                                                    {
                                                                        if (varb.get(klm).value.charAt(lkj2)!='=')
                                                                        {
                                                                            go+=varb.get(klm).value.charAt(lkj2);
                                                                        }
                                                                    }
                                                                    for (int lkj2=0;lkj2<varb.get(lkj).value.length();lkj2++)
                                                                    {
                                                                        if (varb.get(lkj).value.charAt(lkj2)!='=')
                                                                        {
                                                                            goo+=varb.get(lkj).value.charAt(lkj2);
                                                                        }
                                                                    }
                                                                   int tempooo;
                                                                   tempooo=Integer.parseInt(go)/Integer.parseInt(goo);
                                                                   Values+="The Value Of Variable [ "+varb.get(klm).name+" ] In line "+line_count+" From { "+varb.get(klm).value+" }To "+tempooo+System.getProperty("line.separator");
                                                                   varb.get(klm).value=Integer.toString(tempooo);
                                                                }
                                                                else if (Character.isDigit(st.charAt(tok)))
                                                                {
                                                                   for (;tok<st.length();tok++)
                                                                   {
                                                                       if (!Character.isDigit(st.charAt(tok)))
                                                                       {
                                                                           break;
                                                                       }
                                                                       else
                                                                       {
                                                                            Plusqual+=st.charAt(tok);
                                                                       }
                                                                   }
                                                                    String go="";
                                                                    
                                                                    for (int lkj2=0;lkj2<varb.get(klm).value.length();lkj2++)
                                                                    {
                                                                        if (varb.get(klm).value.charAt(lkj2)!='=')
                                                                        {
                                                                            go+=varb.get(klm).value.charAt(lkj2);
                                                                        }
                                                                    } 
                                                                   int tempooo;
                                                                   tempooo=Integer.parseInt(go)/Integer.parseInt(Plusqual);
                                                                   Values+="The Value Of Variable [ "+varb.get(klm).name+" ] In line "+line_count+" From { "+varb.get(klm).value+" }To "+tempooo+System.getProperty("line.separator");
                                                                   varb.get(klm).value=Integer.toString(tempooo);
                                                                }
                                                            }
                                                            else
                                                            {
                                                                int tok=l+2;
                                                                if (Character.isLetter(st.charAt(tok)))
                                                                {
                                                                   for (;tok<st.length();tok++)
                                                                   {
                                                                       if (!Character.isLetter(st.charAt(tok)))
                                                                       {
                                                                           break;
                                                                       }
                                                                       else
                                                                       {
                                                                            Plusqual+=st.charAt(tok);
                                                                       }
                                                                   }
                                                                   int lkj=0;
                                                                   for (;lkj<varb.size();lkj++)
                                                                   {
                                                                       if (varb.get(lkj).name.equals(Plusqual))
                                                                       {
                                                                           break;
                                                                       }
                                                                   }
                                                                    String go="";
                                                                    String goo="";
                                                                    
                                                                    for (int lkj2=0;lkj2<varb.get(klm).value.length();lkj2++)
                                                                    {
                                                                        if (varb.get(klm).value.charAt(lkj2)!='=')
                                                                        {
                                                                            go+=varb.get(klm).value.charAt(lkj2);
                                                                        }
                                                                    }
                                                                    for (int lkj2=0;lkj2<varb.get(lkj).value.length();lkj2++)
                                                                    {
                                                                        if (varb.get(lkj).value.charAt(lkj2)!='=')
                                                                        {
                                                                            goo+=varb.get(lkj).value.charAt(lkj2);
                                                                        }
                                                                    }
                                                                   int tempooo;
                                                                   tempooo=Integer.parseInt(go)/Integer.parseInt(goo);
                                                                   Values+="The Value Of Variable [ "+varb.get(klm).name+" ] In line "+line_count+" From { "+varb.get(klm).value+" }To "+tempooo+System.getProperty("line.separator");
                                                                   varb.get(klm).value=Integer.toString(tempooo);
                                                                }
                                                                else if (Character.isDigit(st.charAt(tok)))
                                                                {
                                                                   for (;tok<st.length();tok++)
                                                                   {
                                                                       if (!Character.isDigit(st.charAt(tok)))
                                                                       {
                                                                           break;
                                                                       }
                                                                       else
                                                                       {
                                                                            Plusqual+=st.charAt(tok);
                                                                       }
                                                                   }
                                                                    String go="";
                                                                    
                                                                    for (int lkj2=0;lkj2<varb.get(klm).value.length();lkj2++)
                                                                    {
                                                                        if (varb.get(klm).value.charAt(lkj2)!='=')
                                                                        {
                                                                            go+=varb.get(klm).value.charAt(lkj2);
                                                                        }
                                                                    } 
                                                                   int tempooo;
                                                                   tempooo=Integer.parseInt(go)/Integer.parseInt(Plusqual);
                                                                   Values+="The Value Of Variable [ "+varb.get(klm).name+" ] In line "+line_count+" From { "+varb.get(klm).value+" }To "+tempooo+System.getProperty("line.separator");
                                                                   varb.get(klm).value=Integer.toString(tempooo);
                                                                }
                                                            }
                      
                                                        }
                                                    }
                                                    else
                                                    {
                                                        String go="";
                                                        for (int lkj=0;lkj<varb.get(klm).value.length();lkj++)
                                                        {
                                                            if (varb.get(klm).value.charAt(lkj)!='=')
                                                            {
                                                                go+=varb.get(klm).value.charAt(lkj);
                                                            }
                                                        }
                                                        int tempooo;
                                                        tempooo=Integer.parseInt(go)/1;
                                                        Values+="The Value Of Variable [ "+varb.get(klm).name+" ] In line "+line_count+" From { "+varb.get(klm).value+" }To "+tempooo+System.getProperty("line.separator");
                                                        varb.get(klm).value=Integer.toString(tempooo);
                                                    }
                                                }
                                            }
                                        }
                                        if (flagp==1)
                                        {
                                            acess="Public";
                                            
                                        }
                                        if (flagp==2)
                                        {
                                            acess="Private";
                                        }
                                        if (st.charAt(l)=='[')
                                        {
                                            int kj=l+1;
                                            for (;;kj++)
                                            {
                                                if (!Character.isDigit(st.charAt(kj)))
                                                
                                                {
                                                    break;
                                                }
                                                if (tempcount.equals("0"))
                                                {
                                                    tempcount="";
                                                    tempcount+=st.charAt(kj);
                                                }
                                                else
                                                {
                                                    tempcount+=st.charAt(kj);
                                                }
                                            }
                                        }
                                        int count_char_letters=0;
                                        for (int nt=0;nt<varb.size();nt++)
                                        {
                                            if(temp.equals(varb.get(nt).name))
                                            {
                                            
                                                if (varb.get(nt).type.equals("int"))
                                                {
                                                
                                                    if(st.charAt(l)=='=')
                                                    {
                                                    
                                                        for(int tv=l+1;tv<st.length();tv++)
                                                        {
                                                            if (st.charAt(tv)==';')
                                                            {
                                                                break;
                                                            }
                                                        
                                                            if(st.charAt(tv)!=' ')
                                                            {
                                                            
                                                                if(!Character.isDigit(st.charAt(tv)))
                                                                {
                                                                
                                                                    errors+="Error in line "+line_count+" Not Type"+System.getProperty("line.separator");
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                                         
                                                else if(varb.get(nt).type.equals("char"))
                                                {
                                                    if(st.charAt(l)=='=')
                                                    {
                                                        for(int tv=l+1;tv<st.length();tv++)
                                                        {
                                                            if (st.charAt(tv)==';')
                                                            {
                                                                break;
                                                            }
                                                        
                                                            if(st.charAt(tv)!=' '&&st.charAt(tv)!='"'&&st.charAt(tv)!='\'')
                                                            {
                                                            
                                                                count_char_letters++;
                                                            }
                                                        }
                                                    }
                                                       
                                                    if(count_char_letters>1)
                                                    {
                                                    
                                                        errors+="Error in line "+line_count+" wrong char value"+System.getProperty("line.separator");
                                                    }
                                                }
                                            }
                                        }
                                                    
                                        if (st.charAt(l)=='=');
                                        {
                                            
                                            for (int jk=l+1;jk<st.length();jk++)
                                            {
                                                if (st.charAt(jk)==';'||st.charAt(jk)=='+'||st.charAt(jk)=='-')
                                                {
                                                    break;
                                                }
                                                else 
                                                {
                                                    tempval+=st.charAt(jk);
                                                }
                                            
                                            }
                                        }
                                        //integer
                                        if (flag_var[0]==1)
                                        {
                                            type="int";
                                            flag_var[0]=0;
                                            int tempo=0;
                                            for (int kl=0;kl<varb.size();kl++)
                                            {
                                                if (temp.equals(varb.get(kl).name))
                                                {
                                                    tempo=1;
                                                    break;
                                                }
                                            }
                                            if (tempo==0)
                                            {
                                                Variables p=new Variables(temp,type,tempval,tempcount,acess,flagno,1);
                                                varb.add(p);
                                            }
                                            else {
                                                    errors+="Error in line "+line_count+" Variable is Alredey Defined"+System.getProperty("line.separator");
                                            }
                                            temp="";
                                            type="";
                                            tempval="";
                                        }
                                        //Char
                                        else if (flag_var[1]==1)
                                        {
                                            type="char";
                                            flag_var[1]=0;
                                            int tempo=0;
                                            for (int kl=0;kl<varb.size();kl++)
                                            {
                                                if (temp.equals(varb.get(kl).name))
                                                {
                                                    tempo=1;
                                                    break;
                                                }
                                            }
                                            if (tempo==0)
                                            {
                                                Variables p=new Variables(temp,type,tempval,tempcount,acess,flagno,1);
                                                varb.add(p);
                                            }
                                            else {
                                                errors+="Error in line "+line_count+" Variable is Alredey Defined"+System.getProperty("line.separator");
                                            }
                                            temp="";
                                            type="";
                                            tempval="";
                                        }
                                        //float
                                        else if (flag_var[2]==1)
                                        {
                                            type="float";
                                            flag_var[2]=0;
                                            int tempo=0;
                                            for (int kl=0;kl<varb.size();kl++)
                                            {
                                                if (temp.equals(varb.get(kl).name))
                                                {
                                                    tempo=1;
                                                    break;
                                                }
                                            }
                                            if (tempo==0)
                                            {
                                                Variables p=new Variables(temp,type,tempval,tempcount,acess,flagno,1);
                                                varb.add(p);
                                            }
                                            else {
                                                errors+="Error in line "+line_count+" Variable is Alredey Defined"+System.getProperty("line.separator");
                                            }
                                            temp="";
                                            type="";
                                            tempval="";
                                        }
                                        //string
                                        else if (flag_var[3]==1)
                                        {
                                            type="String";
                                            flag_var[3]=0;
                                            int tempo=0;
                                            for (int kl=0;kl<varb.size();kl++)
                                            {
                                                if (temp.equals(varb.get(kl).name))
                                                {
                                                    tempo=1;
                                                    break;
                                                }
                                            }
                                            if (tempo==0)
                                            {
                                                Variables p=new Variables(temp,type,tempval,tempcount, acess,flagno,1);
                                                varb.add(p);
                                            }
                                            else {
                                                errors+="Error in line "+line_count+" Variable is Alredey Defined"+System.getProperty("line.separator");
                                            }
                                            temp="";
                                            type="";
                                            tempval="";
                                        }
                                        //double
                                        else if (flag_var[4]==1)
                                        {
                                            type="Double";
                                            flag_var[4]=0;
                                            int tempo=0;
                                            for (int kl=0;kl<varb.size();kl++)
                                            {
                                                if (temp.equals(varb.get(kl).name))
                                                {
                                                    tempo=1;
                                                    break;
                                                }
                                            }
                                            if (tempo==0)
                                            {
                                                Variables p=new Variables(temp,type,tempval,tempcount,acess,flagno,1);
                                                varb.add(p);
                                            }
                                            else {
                                                errors+="Error in line "+line_count+" Variable is Alredey Defined"+System.getProperty("line.separator");
                                            }
                                            temp="";
                                            type="";
                                            tempval="";
                                        }

                                        break;
                                    }
                                    else
                                    {
                                        temp+=st.charAt(l);
                                    }
                                    if (st.charAt(l)=='=');
                                        {
                                            
                                            for (int jk=l;jk<varb.size();jk++)
                                            {
                                               if (varb.get(jk).name.equals(tempk))
                                               {
                                                   if(varb.get(jk).Accessible==0)
                                                   {
                                                        errors+="Error in Line "+line_count+" Trying To Access A Private Variable not Availiable in Current Context"+System.getProperty("line.separator");
                                                   }
                                               }
                                            
                                            }
                                        }
                                }
                                flag=1;
                            }
                        }
                        
                        if(st.charAt(k)=='/'&&st.charAt(k+1)=='0')
                        {
                            errors+="Error in line "+ line_count +" Division by Zero"+System.getProperty("line.separator");

                        }
                        
                        count_letters++;
                    }
                    if(Lines[j].toString().charAt(k-1)!=';'&&(Lines[j].toString().charAt(0)=='f'&&Lines[j].toString().charAt(1)=='o'&&Lines[j].toString().charAt(2)=='r'&&(Lines[j].toString().charAt(3)==' '||Lines[j].toString().charAt(3)=='(')))
                    {   
                    }
                    else if(Lines[j].toString().charAt(k-1)!=';'&&(Lines[j].toString().charAt(k-1)==')'))
                    {
                    }
                    else if(Lines[j].toString().charAt(k-1)!=';'&&(Lines[j].toString().charAt(0)=='{'))
                    {
                    }
                    else if(Lines[j].toString().charAt(k-1)!=';'&&(Lines[j].toString().charAt(0)=='}'))
                    {
                    }
                    else if(Lines[j].toString().charAt(k-1)!=';'&&(Lines[j].toString().charAt(0)=='i'&&Lines[j].toString().charAt(1)=='f'&&(Lines[j].toString().charAt(2)==' '||Lines[j].toString().charAt(2)=='(')))
                    {   
                    }
                    else if(Lines[j].toString().charAt(k-1)!=';'&&(Lines[j].toString().charAt(0)=='w'&&Lines[j].toString().charAt(1)=='h'&&Lines[j].toString().charAt(2)=='i'&&Lines[j].toString().charAt(3)=='l'&&Lines[j].toString().charAt(4)=='e'&&(Lines[j].toString().charAt(5)==' '||Lines[j].toString().charAt(5)=='(')))
                    {   
                    }
                    else if(Lines[j].toString().charAt(k-1)!=';')
                    {
                        errors+="Error in line "+ line_count +" Missing simicolon"+System.getProperty("line.separator");
                    }
                    Def+=System.getProperty("line.separator");
                    count_letters=0;
                }
            }
        } catch (IOException ex) {
            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
        }
        ErrorChecing er = new ErrorChecing();
        /*errors="";
        for (int i=0;i<var.size();i++)
        {
            errors+=var.get(i).name+"---"+var.get(i).access+"---"+var.get(i).Accessible+"---"+var.get(i).Context+System.getProperty("line.separator");
        }*/
        FileWriter fileWriter2=null;
        try {
            fileWriter2 = new FileWriter("output.txt", true);
        } catch (IOException ex) {
            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
        }
        BufferedWriter bufferedWriter2 = new BufferedWriter(fileWriter2);
        try {
            bufferedWriter2.write(Def);
        } catch (IOException ex) {
            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            bufferedWriter2.close();
        } catch (IOException ex) {
            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            br.close();
        } catch (IOException ex) {
            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
        }
        f.delete();
        
        //================================================
        /*for (int i=0;i<varb.size();i++)
        {
            mem.jTextArea2.setText(mem.jTextArea2.getText()+varb.get(i).name+varb.get(i).type+varb.get(i).value);
        }*/
        mem.jTextArea2.setText(Values);
        mem.jTextArea1.setText(jTextArea1.getText());
        mem.setVisible(true);
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Menu().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JColorChooser jColorChooser1;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    public static javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    public javax.swing.JMenuBar jMenuBar1;
    public static javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
